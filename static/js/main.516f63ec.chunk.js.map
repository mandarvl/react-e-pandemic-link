{"version":3,"sources":["models/User.tsx","Components/Login/Login.tsx","Components/SignUp/SignUp.tsx","Components/MyContext.tsx","Components/Logo/Logo.tsx","Components/Header/Header.tsx","models/Post.tsx","Components/NewPost/NewPost.tsx","models/Group.tsx","models/_Comment.tsx","Data/data.tsx","Components/Error/Error.tsx","Components/AppLoader/AppLoader.tsx","Components/Authentification/Authentification.tsx","Components/SingleComment/SingleComment.tsx","Components/CommentList/CommentList.tsx","Components/SinglePost/SinglePost.tsx","Components/SingleGroup/SingleGroup.tsx","Components/SuggestGroup/SuggestGroup.tsx","Components/Feed/Feed.tsx","Components/Home/Home.tsx","Components/ViewPost/ViewPost.tsx","Components/Search/Search.tsx","Components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["User","id","firstName","lastName","pdpPath","email","mdp","this","Login","state","errorMessage","loading","performLogin","event","a","preventDefault","form","target","password","undefined","user","context","users","find","x","value","login","setErrorMessage","setLoadAuthComp","onSubmit","e","className","type","name","required","placeholder","defaultValue","href","onClick","props","toggle","Component","contextType","MyContext","SignUp","performSignup","newUser","getLastId","addUser","setSuccessMessage","style","color","fontSize","React","createContext","posts","groups","showNewPostModal","newPostStatusHandler","newValue","postModifHandler","loggedUser","withMessage","logout","Logo","params","cl","size","length","concat","invert","FontAwesome","require","Header","inputRef","history","push","exact","to","search","ref","node","isLogged","activeClassName","title","withRouter","Post","imagePath","authorId","date","description","groupId","likes","dislikes","NewPost","groupSelect","titleInput","descInput","lastId","newPost","Number","addPost","querySelector","hidden","createPost","src","process","alt","GetFullName","map","item","Group","_Comment","content","postId","Data","comments","Error","loaderRef","createRef","showLoader","current","hideLoader","AppLoader","isLoading","console","log","setState","Authentification","loginSelected","document","classList","add","remove","toggleActionHandler","SingleComment","author","getUserById","currentComment","post","CommentList","setContainer","show","createComment","bind","textarea","newCom","addComment","SinglePost","isLiked","isDisliked","isCommentsClosed","maximize","commentsContainer","setCommentsContainer","elem","currentPost","fromView","nodeName","toLowerCase","parentNode","comDiv","setAttribute","height","clientHeight","myComments","getCommentsByPostId","substring","trimEnd","getGroupById","performLike","performDislike","toggleComments","val","SingleGroup","currentGroup","showDescription","SuggestGroup","Feed","setTimeout","slice","reverse","Home","base","getElementsByTagName","ViewPost","selectedPost","match","getPostById","loadSelectedPost","nextProps","location","filter","Search","keyword","toString","loadSearchKeyword","result","includes","Footer","LoginComponent","lazy","SignUpComponent","App","toAdd","update","group","getPostsByUserId","com","arr","updatedValue","newPostList","index","findIndex","newPostState","loadAuthComp","selected","successMessage","Provider","path","component","fallback","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","variant","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.516f63ec.chunk.js","sourcesContent":["export class User{\r\n    id: number ;\r\n    firstName: string ;\r\n    lastName: string ;\r\n    pdpPath: string ;\r\n    email: string ;\r\n    mdp: string\r\n\r\n    constructor(id = 0, firstName = \"\", lastName = \"\", pdpPath = \"\", email = \"\", mdp = \"\"){\r\n        this.id = id ;\r\n        this.firstName = firstName ;\r\n        this.lastName = lastName ;\r\n        this.pdpPath = pdpPath ;\r\n        this.email = email ;\r\n        this.mdp = mdp ;\r\n    }\r\n\r\n    GetFullName():string{\r\n        return this.firstName+\" \"+this.lastName ;\r\n    }\r\n}","import { MyContext } from \"../MyContext\";\r\nimport { Component } from 'react' ;\r\nimport { User } from \"../../models/User\";\r\nimport React from \"react\";\r\n\r\n\r\nclass Login extends Component<{toggle:any}>{\r\n    state = {\r\n        errorMessage: null\r\n    }\r\n\r\n    loading = false ;\r\n\r\n    performLogin = async (event:any) => {\r\n        event.preventDefault() ;\r\n\r\n        if(this.loading)\r\n            return ;\r\n        this.loading = true ;\r\n        const form = event.target ;\r\n        const email = form[0] ;\r\n        const password = form[1] ;\r\n\r\n        const user = this.context.users.find((x:User) => x.email === email.value && x.mdp === password.value) ;\r\n        if(user !== undefined){\r\n            await this.context.login(user, true) ;\r\n        }else{\r\n            this.context.setErrorMessage(\"L'adresse email ou le mot de passe est incorrect.\") ;\r\n        }\r\n        this.loading = false ;\r\n\r\n        password.value = \"\" ;\r\n        this.context.setLoadAuthComp(null) ;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={(e) => {this.performLogin(e)}}>\r\n                <h5>Se connecter</h5>\r\n                \r\n                <div className=\"form-control\">\r\n                    <input type=\"email\" name=\"email\" required placeholder=\"Votre email\" defaultValue={this.context.users[0].email} className=\"input100\" />\r\n                    <span className=\"focus-input100-1\"></span>\r\n                    <span className=\"focus-input100-2\"></span>\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <input type=\"password\" name=\"password\" required placeholder=\"Votre mot de passe\" defaultValue={this.context.users[0].mdp} className=\"input100\" />\r\n                    <span className=\"focus-input100-1\"></span>\r\n                    <span className=\"focus-input100-2\"></span>\r\n                </div>\r\n                <div className=\"form-control two-separation\">\r\n                    <p className=\"small\">Vous n'avez pas encore de compte? <a href=\"/\" onClick={(e) => {\r\n                        e.preventDefault() ;\r\n                        this.props.toggle() ;\r\n                    }}><b>S'inscrire</b></a></p>\r\n                    <input type=\"submit\" name=\"login\" className=\"btn-rounded\" value=\"Se connecter\" />\r\n                </div>\r\n            </form>\r\n        ) ;\r\n    }\r\n}\r\n\r\nLogin.contextType = MyContext ;\r\n\r\nexport default Login ;","import { Component } from \"react\";\r\nimport { User } from \"../../models/User\";\r\nimport { MyContext } from \"../MyContext\";\r\n\r\n\r\nclass SignUp extends Component<{toggle:any}>{\r\n    state = {\r\n        errorMessage: null\r\n    }\r\n\r\n    loading = false ;\r\n\r\n    performSignup = async (event:any) => {\r\n        event.preventDefault() ;\r\n\r\n        if(this.loading)\r\n            return ;\r\n        this.loading = true ;\r\n        const form = event.target ;\r\n        const firstName = form[0] ;\r\n        const lastName = form[1] ;\r\n        const email = form[2] ;\r\n        const password = form[3] ;\r\n        const users = this.context.users ;\r\n\r\n        const mailExist = users.find((x:User) => x.email === email.value) ;\r\n        if(mailExist === undefined){\r\n            const newUser = new User(this.context.getLastId(users), firstName.value, lastName.value, \"assets/images/pdp/9.jpg\", email.value, password.value) ;\r\n            await this.context.addUser(newUser) ;\r\n            await this.context.login(newUser, false) ;\r\n            this.context.setSuccessMessage(\"Félicitation! Vous faîtes partie de la communauté de E-Pandemic-Link maintenant.\") ;\r\n        }else{\r\n            this.context.setErrorMessage(\"Cette adresse email est déjà utilisée.\") ;\r\n        }\r\n        this.loading = false ;\r\n\r\n        password.value = \"\" ;\r\n        this.context.setLoadAuthComp(null) ;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={(e) => this.performSignup(e)}>\r\n                <h5>S'inscrire</h5>\r\n                {this.state.errorMessage != null ?<p style={{color: \"red\", fontSize: \"14px\"}}>{this.state.errorMessage}</p>:null}\r\n                <div className=\"form-control\">\r\n                    <input type=\"text\" name=\"prenom\" required placeholder=\"Votre prénom\" className=\"input100\" />\r\n                    <span className=\"focus-input100-1\"></span>\r\n                    <span className=\"focus-input100-2\"></span>\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <input type=\"text\" name=\"nom\" required placeholder=\"Votre nom\" className=\"input100\" />\r\n                    <span className=\"focus-input100-1\"></span>\r\n                    <span className=\"focus-input100-2\"></span>\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <input type=\"email\" name=\"email\" required placeholder=\"Votre email\" className=\"input100\" />\r\n                    <span className=\"focus-input100-1\"></span>\r\n                    <span className=\"focus-input100-2\"></span>\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <input type=\"password\" name=\"password\" required placeholder=\"Votre mot de passe\" className=\"input100\" />\r\n                    <span className=\"focus-input100-1\"></span>\r\n                    <span className=\"focus-input100-2\"></span>\r\n                </div>\r\n                <div className=\"form-control two-separation\">\r\n                    <p className=\"small\">Vous avez déjà un compte? <a href=\"/\" onClick={(e) => {\r\n                        e.preventDefault() ;\r\n                        this.props.toggle() ;\r\n                    }}><b>Se connecter</b></a></p>\r\n                    <input type=\"submit\" name=\"signin\" className=\"btn-rounded\" value=\"Créer mon compte\" />\r\n                </div>\r\n            </form>\r\n        ) ;\r\n    }\r\n}\r\n\r\nSignUp.contextType = MyContext ;\r\n\r\nexport default SignUp ;","import React from 'react' ;\r\nimport { Post } from '../models/Post';\r\nimport { User } from '../models/User';\r\nimport { Group } from '../models/Group';\r\nconst MyContext = React.createContext({\r\n    users: [] as User[],\r\n    posts: [] as Post[],\r\n    groups: [] as Group[],\r\n    showNewPostModal: false,\r\n    newPostStatusHandler: (newValue: boolean) => {},\r\n    postModifHandler: (id:number, newValue: Post) => {},\r\n    loggedUser: null,\r\n    login: (user:User, withMessage: boolean) => {},\r\n    logout: () => {}\r\n}) ;\r\n\r\nexport {MyContext} ;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport './Logo.css' ;\r\n\r\nfunction Logo(params:{size:string, invert:boolean}){\r\n    var cl = \"site-logo\" ;\r\n    if(params.size.length > 0)\r\n        cl = cl.concat(\" \"+params.size) ;\r\n\r\n    if(params.invert)\r\n        cl = cl.concat(\" invert\") ;\r\n\r\n    return(\r\n        <span className={cl}><span className=\"highlight\">E</span>-Pandemic Link</span>\r\n    ) ;\r\n}\r\n\r\nexport default Logo ;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react';\r\nimport './Header.css' ;\r\nimport Logo from '../Logo/Logo' ;\r\nimport { MyContext } from '../MyContext';\r\nimport { NavLink, RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\nvar FontAwesome = require('react-fontawesome');\r\n\r\ninterface HeaderRouterProps {\r\n    history: any\r\n}\r\n  \r\ninterface HeaderProps extends RouteComponentProps<HeaderRouterProps> {\r\n\r\n}\r\n\r\nclass Header extends Component<HeaderProps> {\r\n    inputRef: any ;\r\n\r\n    search(e:any){\r\n        e.preventDefault() ;\r\n        this.props.history.push(\"/search/\"+this.inputRef.value) ;\r\n    }\r\n\r\n    showLogin(){\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <header>\r\n                <div className=\"wrapper\" id=\"header-content\">\r\n                    <NavLink exact to=\"/\"><Logo invert={false} size=\"normal\" /></NavLink>\r\n                    <form className=\"header-search\" onSubmit={(e) => this.search(e)}>\r\n                        <input type=\"text\" ref={node => this.inputRef = node} className=\"text\" placeholder=\"Rechercher...\"/>\r\n                        <button type=\"submit\" className=\"btn-icon\">\r\n                        <FontAwesome name='search' />\r\n                        </button>\r\n                    </form>\r\n                    <nav id=\"primary-menu\">\r\n                        \r\n                        {this.context.isLogged()?\r\n                        (<ul>\r\n                            <li><NavLink exact to=\"/\" activeClassName=\"active\">Actualités</NavLink></li>\r\n                            <li><a href=\"/logout\" onClick={\r\n                                (e)=>{\r\n                                    e.preventDefault() ; \r\n                                    this.context.logout() ;\r\n                                    this.props.history.push(\"/\") ;\r\n                                }}>Se déconnecter</a></li>\r\n                            <li>\r\n                                <button title=\"Poser une question\" className=\"btn-rounded\" onClick={() => this.context.newPostStatusHandler(true)}>\r\n                                    <div>\r\n                                        <FontAwesome name=\"edit fa-fw\" />\r\n                                        <span>Poser une question</span>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                        </ul>):\r\n                        (\r\n                        <ul>\r\n                            <li>\r\n                                <button title=\"Se connecter\" className=\"btn-rounded\" onClick={() => this.context.setLoadAuthComp(\"login\")}>\r\n                                    <div>\r\n                                        <FontAwesome name=\"sign-in fa-fw\" />\r\n                                        <span>Se connecter</span>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <button title=\"Créer un compte\" className=\"btn-rounded\" onClick={() => this.context.setLoadAuthComp(\"signUp\")}>\r\n                                    <div>\r\n                                        <FontAwesome name=\"user-plus fa-fw\" />\r\n                                        <span>Créer un compte</span>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                        )\r\n                        }\r\n                        \r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nHeader.contextType = MyContext ;\r\nexport default withRouter(Header) ;","export class Post{\r\n    id: number ;\r\n    imagePath: string ;\r\n    authorId: number ;\r\n    date: string ;\r\n    title: string ;\r\n    description: string ;\r\n    groupId: number ;\r\n    likes: number ;\r\n    dislikes: number;\r\n\r\n    constructor(id = 0, imagePath = '', authorId = 0, date = '', title = '', description = '', groupId = 0, likes = 0, dislikes = 0){\r\n        this.id = id ;\r\n        this.imagePath = imagePath ;\r\n        this.authorId = authorId ;\r\n        this.date = date ;\r\n        this.title = title ;\r\n        this.description = description ;\r\n        this.groupId = groupId ;\r\n        this.likes = likes ;\r\n        this.dislikes = dislikes ;\r\n    }\r\n}","import { Component } from 'react' ;\r\nimport { Group } from '../../models/Group';\r\nimport { Post } from '../../models/Post';\r\nimport { MyContext } from '../MyContext';\r\nimport './NewPost.css' ;\r\nvar FontAwesome = require('react-fontawesome') ;\r\n\r\nclass NewPost extends Component{\r\n    groupSelect: any ;\r\n    titleInput: any ;\r\n    descInput: any ;\r\n\r\n    createPost(){\r\n        const lastId = this.context.getLastId(this.context.posts) ;\r\n        let newPost = new Post(lastId, '', this.context.loggedUser.id, 'A l\\'instant', this.titleInput.value, this.descInput.value, Number(this.groupSelect.value), 0, 0) ;\r\n        \r\n        this.context.addPost(newPost) ;\r\n        this.context.newPostStatusHandler(false) ;\r\n\r\n        this.context.setSuccessMessage(\"Votre question a été publiée.\") ;\r\n\r\n        this.groupSelect.value = this.groupSelect.querySelector(\"option:first-child\").value ;\r\n        this.titleInput.value = \"\" ;\r\n        this.descInput.value = \"\" ;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div hidden={!this.context.showNewPostModal} className=\"modal\">\r\n                <div className=\"modal-content animation-zoom-in container\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"text-center modal-title\">Poser une question</h5>\r\n                        <FontAwesome className=\"close red-hover\" name=\"times\" onClick={() => {\r\n                            this.context.newPostStatusHandler(false) ;\r\n                        }} />\r\n                    </div>\r\n                    <div className=\"modal-body small-margin-y\">\r\n                        <form onSubmit={(e) => {e.preventDefault() ; this.createPost()}}>\r\n                            <div className=\"user-header disabled\">\r\n                                <div className=\"pdp-container\">\r\n                                    <img src={process.env.PUBLIC_URL+\"/\"+this.context.loggedUser.pdpPath} alt=\"Pdp\" />\r\n                                </div>\r\n                                <div className=\"side-info inline-flex\">\r\n                                    <span className=\"name\">{this.context.loggedUser.GetFullName()}</span>\r\n                                    <FontAwesome name=\"caret-right\" />\r\n                                    <div className=\"custom-select\">\r\n                                        <select name=\"group\" required ref={node => this.groupSelect = node}>\r\n                                            {this.context.groups.map((item:Group) => {\r\n                                                return(\r\n                                                    <option key={item.id} value={item.id}>{item.name}</option>\r\n                                                ) ;\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-control\">\r\n                                <input type=\"text\" required name=\"titre\" ref={node => this.titleInput = node} className=\"input100\" placeholder=\"Quelle est votre question ?\" />\r\n                                <span className=\"focus-input100-1\"></span>\r\n                                <span className=\"focus-input100-2\"></span>\r\n                            </div>\r\n                            <div className=\"form-control\">\r\n                                <textarea className=\"input100\" name=\"description\" ref={node => this.descInput = node} placeholder=\"Donner plus de détails concernant votre question...\"></textarea>\r\n                                <span className=\"focus-input100-1\"></span>\r\n                                <span className=\"focus-input100-2\"></span>\r\n                            </div>\r\n                            <div className=\"form-control text-right\">\r\n                                <button className=\"btn-transparent\" type=\"reset\" onClick={() => {\r\n                                    this.context.newPostStatusHandler(false) ;\r\n                                }}>Annuler</button>\r\n                                <input type=\"submit\" className=\"btn-rounded\" value=\"Publier maintenant\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nNewPost.contextType = MyContext ;\r\n\r\nexport default NewPost ;","export class Group{\r\n    id: number ;\r\n    name: string ;\r\n    description: string ;\r\n    imagePath: string ;\r\n\r\n    constructor(id = 0, name = '', description = '', imagePath = ''){\r\n        this.id = id ;\r\n        this.name = name ;\r\n        this.description = description ;\r\n        this.imagePath = imagePath ;\r\n    }\r\n}","export class _Comment{\r\n    id: number ;\r\n    content: string ;\r\n    date: string ;\r\n    authorId: number ;\r\n    postId: number ;\r\n\r\n    constructor(id = 0, content = '', date = '', authorId = 0, postId = 0){\r\n        this.id = id ;\r\n        this.content = content ;\r\n        this.date = date ;\r\n        this.authorId = authorId ;\r\n        this.postId = postId ;\r\n    }\r\n}","import { Group } from \"../models/Group\";\r\nimport { Post } from \"../models/Post\";\r\nimport { User } from \"../models/User\"\r\nimport { _Comment } from \"../models/_Comment\"\r\n\r\nexport class Data{\r\n    static users: User[] = [\r\n        new User(1, \"Octavia\", \"Blake\", \"assets/images/pdp/1.jpg\" , \"octaviablake@gmail.com\", \"motdepasse\"),\r\n        new User(2, \"Clarke\", \"Gryffin\", \"assets/images/pdp/2.jpg\", \"clarke@gmail.com\", \"wanheda\"),\r\n        new User(3, \"Bellamy\", \"Blake\", \"assets/images/pdp/3.jpg\", \"bellamy@gmail.com\", \"trikru1234\")\r\n    ] ;\r\n\r\n    static posts: Post[] = [\r\n        new Post(1, \"assets/images/1.jpg\", 1, \"5h\", \"Comment se transmet le coronavirus ?\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\", 1, 5, 1),\r\n        new Post(2, \"assets/images/3.jpg\", 2, \"12h\", \"Où dois-je me rendre pour me faire vacciner ?\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\", 2, 8, 1),\r\n        new Post(3, \"assets/images/4.jpg\", 1, \"5h\", \"Que faire face aux premiers signes ?\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\", 1, 5, 4)\r\n    ] ;\r\n    \r\n    static groups: Group[] = [\r\n        new Group(1, \"Santé et bien-être\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\", \"assets/images/post/1.jpg\"),\r\n        new Group(2, \"Recherches sur les vaccins\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\", \"assets/images/post/2.jpg\"),\r\n        new Group(3, \"Nouvelles sur le Coronavirus\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\", \"assets/images/post/3.jpg\")\r\n    ] ;\r\n    \r\n    static comments: _Comment[] = [\r\n        new _Comment(1, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\", \"30m\", 1, 1),\r\n        new _Comment(2, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\", \"1h\", 2, 2),\r\n        new _Comment(3, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\", \"20m\", 2, 1),\r\n        new _Comment(4, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\", \"2h\", 3, 3),\r\n        new _Comment(5, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\", \"30m\", 1, 3),\r\n        new _Comment(6, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\", \"25m\", 1, 2),\r\n        new _Comment(7, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\", \"55m\", 3, 1),\r\n        new _Comment(8, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\", \"55m\", 3, 2)\r\n    ] ;\r\n\r\n}","import { Component } from \"react\";\r\nimport { MyContext } from \"../MyContext\";\r\nimport './Error.css' ;\r\n\r\nclass Error extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"error-container\">\r\n                <h1 className=\"error-name\">Erreur 404</h1>\r\n                <p>La page que vous essayer d'atteindre est introuvable.</p>\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nError.contextType = MyContext ;\r\n\r\nexport default Error ;","import React from 'react';\r\nexport const loaderRef:any = React.createRef();\r\n\r\nexport function showLoader() {\r\n    let ref:any = loaderRef.current\r\n    if (ref) {\r\n        ref.showLoader()\r\n    }\r\n}\r\n\r\nexport function hideLoader() {\r\n    let ref:any = loaderRef.current\r\n    if (ref) {\r\n        ref.hideLoader()\r\n    }\r\n}\r\n\r\nclass AppLoader extends React.Component {\r\n    state = { isLoading: true }\r\n\r\n    showLoader() {\r\n        console.log(\"show\") ;\r\n        this.setState({ isLoading: true }) ;\r\n    }\r\n\r\n    hideLoader() {\r\n        console.log(\"hide\") ;\r\n        this.setState({ isLoading: false }) ;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loader\" hidden={!this.state.isLoading}></div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AppLoader ;","import { Component } from \"react\";\r\nimport './Authentification.css' ;\r\nimport { hideLoader, showLoader } from \"../AppLoader/AppLoader\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport Login from \"../Login/Login\";\r\nimport SignUp from \"../SignUp/SignUp\";\r\n\r\n\r\nclass Authentification extends Component{\r\n    state = {\r\n        loginSelected: true\r\n    }\r\n\r\n    toggleActionHandler(){\r\n        this.setState({\r\n            loginSelected: !this.state.loginSelected\r\n        })\r\n    }\r\n\r\n    constructor(props:any){\r\n        super(props) ;\r\n        showLoader() ;\r\n    }\r\n    \r\n    componentDidMount(){\r\n        document.querySelector(\"header\")?.classList.add(\"hidden\") ;\r\n        hideLoader() ;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.querySelector(\"header\")?.classList.remove(\"hidden\") ;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"full-bg\">\r\n                <div className=\"auth-container\">\r\n                    <div className=\"illustration\">\r\n                    </div>\r\n                    <div className=\"form-container\">\r\n                        <div className=\"auth-header\">\r\n                            <p><Logo invert={true} size=\"large\" /> <br/> Par RAVALISON Manda Jerisoa IMTICIA5</p>\r\n                            <p className=\"description\">\r\n                                Bienvenue sur E-Pandemic Link, un lieu pour rester connecté et être en bonne santé durant cette pandémie.\r\n                            </p>\r\n                        </div>\r\n                        {this.state.loginSelected?<Login toggle={() => this.toggleActionHandler()} />:<SignUp toggle={() => this.toggleActionHandler()}/>}\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default Authentification ;","import { Component } from 'react' ;\r\nimport { Post } from '../../models/Post';\r\nimport { _Comment } from '../../models/_Comment';\r\nimport { MyContext } from '../MyContext';\r\nimport './SingleComment.css' ;\r\n\r\nclass SingleComment extends Component<{post: Post, currentComment: _Comment}>{\r\n    render(){\r\n        let author = this.context.getUserById(this.props.currentComment.authorId) ;\r\n        return (\r\n            <div className=\"comment\">\r\n                <div className=\"user-header\">\r\n                    <div className=\"pdp-container small\">\r\n                        <img className=\"object-fit-cover\" src={process.env.PUBLIC_URL+\"/\"+author.pdpPath} alt=\"Pdp\" />\r\n                    </div>\r\n                    <div className=\"side-info\">\r\n                        <p className=\"name\">{author.GetFullName()}</p>\r\n                        <p>\r\n                            <span className=\"group-name\">{this.props.post.authorId === this.props.currentComment.authorId?\"Auteur\":\"Membre\"}</span>\r\n                            <span className=\"date\">{this.props.currentComment.date}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <p>\r\n                    {this.props.currentComment.content}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSingleComment.contextType = MyContext ;\r\n\r\nexport default SingleComment ;","import {Component} from 'react' ;\r\nimport { Post } from '../../models/Post';\r\nimport { _Comment } from '../../models/_Comment';\r\nimport { MyContext } from '../MyContext';\r\nimport SingleComment from '../SingleComment/SingleComment';\r\nimport './CommentList.css' ;\r\n\r\nclass CommentList extends Component<{comments: _Comment[], post: Post, show: boolean, setContainer:any}>{\r\n    render(){\r\n        return (\r\n            <div ref={(node) => this.props.setContainer(node)} className={this.props.show?\"comments\": \"comments closed\"}>\r\n                <div className=\"content\">\r\n                    <h5>Réponses</h5>\r\n                    <div className=\"viewport\">\r\n                        {this.props.comments.map((item:_Comment) =>\r\n                            <SingleComment key={item.id} post={this.props.post} currentComment={item} />\r\n                        )}\r\n                        { \r\n                        this.props.comments.length === 0? <p className=\"small-margin-y\"><i>Aucune réponse pour l'instant.</i></p>:<br/>\r\n                        }\r\n                        {this.context.isLogged()?\r\n                        (<form id={\"form-\"+this.props.post.id} onSubmit={this.createComment.bind(this)}>\r\n                            <p>Aidez cette personne en répondant à sa question</p>\r\n                            <div className=\"form-control\">\r\n                                <textarea className=\"input100\" name=\"answer\" required placeholder=\"Entrer votre réponse...\"></textarea>\r\n                                <span className=\"focus-input100-1\"></span>\r\n                                <span className=\"focus-input100-2\"></span>\r\n                            </div>\r\n                            <div className=\"form-control\">\r\n                                <input type=\"submit\" value=\"Envoyer\" />\r\n                            </div>\r\n                        </form>) : (\r\n                            <p>Vous devez vous <a href=\"/\" onClick={(e) => {e.preventDefault() ; this.context.setLoadAuthComp(\"login\")}}><span className=\"highlight\">connecter</span></a> ou <a href=\"/\" onClick={(e) => {e.preventDefault() ; this.context.setLoadAuthComp(\"signUp\")}}><span className=\"highlight\">créer un compte</span></a> pour donner une réponse</p>\r\n                        ) }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) ;\r\n    }\r\n    createComment(e:any) {\r\n        e.preventDefault() ;\r\n        console.log(e) ;\r\n        let textarea = e.target[0] as HTMLInputElement ;\r\n        let newCom = new _Comment(this.context.getLastId(this.context.comments), textarea.value, \"1m\", this.context.loggedUser.id, this.props.post.id) ;\r\n        this.context.addComment(newCom) ;\r\n        textarea.value = \"\" ;\r\n    }\r\n}\r\n\r\nCommentList.contextType = MyContext ;\r\n\r\nexport default CommentList ;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { Component } from 'react';\r\nimport './SinglePost.css' ;\r\nimport { Post } from '../../models/Post' ;\r\nimport { MyContext } from '../MyContext';\r\nimport { User } from '../../models/User';\r\nimport { _Comment } from '../../models/_Comment';\r\nimport CommentList from '../CommentList/CommentList';\r\nimport { NavLink } from 'react-router-dom';\r\nvar FontAwesome = require('react-fontawesome') ;\r\n\r\nclass SinglePost extends Component<{currentPost:Post, maximize: boolean, fromView: boolean}>{\r\n    isLiked:boolean = false ;\r\n    isDisliked: boolean = false ;\r\n    \r\n    state = {\r\n        isCommentsClosed: !this.props.maximize,\r\n    }\r\n\r\n    commentsContainer: any ;\r\n\r\n    setCommentsContainer = (elem: any) => {\r\n        this.commentsContainer = elem ;\r\n    }\r\n\r\n    performLike(){\r\n        this.isLiked = !this.isLiked ;\r\n        if(this.isLiked){\r\n            this.props.currentPost.likes++ ;\r\n            if(this.isDisliked){\r\n                this.props.currentPost.dislikes-- ;\r\n                this.isDisliked = false ;\r\n            } \r\n        }else{\r\n            this.props.currentPost.likes-- ;\r\n        }\r\n\r\n        this.context.postModifHandler(this.props.currentPost.id, this.props.currentPost) ;\r\n    }\r\n\r\n    performDislike(){\r\n        this.isDisliked = !this.isDisliked ;\r\n        if(this.isDisliked){\r\n            this.props.currentPost.dislikes++ ;\r\n            if(this.isLiked){\r\n                this.props.currentPost.likes-- ;\r\n                this.isLiked = false ;\r\n            }\r\n        }else{\r\n            this.props.currentPost.dislikes-- ;\r\n        }\r\n        this.context.postModifHandler(this.props.currentPost.id, this.props.currentPost) ;\r\n    }\r\n\r\n    toggleComments(event:any){\r\n        if(!this.props.fromView){\r\n            event.preventDefault() ;\r\n            let a = event.target as HTMLElement ;\r\n            if(a.nodeName.toLowerCase() !== \"a\"){\r\n                a = a.parentNode as HTMLElement ;\r\n            }\r\n\r\n            a.classList.toggle(\"active\") ;\r\n            this.setState({\r\n                isCommentsClosed: !this.state.isCommentsClosed\r\n            }) ;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.commentsContainer === undefined || this.props.fromView)\r\n            return ;\r\n        \r\n        let comDiv = this.commentsContainer as unknown as HTMLElement ;\r\n        let content:HTMLElement = comDiv.querySelector(\".content\") as HTMLElement ;\r\n        let viewport = comDiv.querySelector(\".viewport\") as HTMLElement ;\r\n        \r\n        viewport.setAttribute(\"style\", \"max-height: 500px\") ;\r\n        comDiv.style.height = content.clientHeight+20+\"px\" ;\r\n    }\r\n\r\n    render(){\r\n        let author:User = this.context.getUserById(this.props.currentPost.authorId) ;\r\n        let myComments:_Comment[] = this.context.getCommentsByPostId(this.props.currentPost.id) ;\r\n        let description = this.props.currentPost.description ;\r\n        const max = 100 ;\r\n        \r\n        if(this.state.isCommentsClosed && description.length > max){\r\n            description = description.substring(0, max).trimEnd().concat(\"...\") ;\r\n        }\r\n\r\n        return (\r\n            <div className=\"post\">\r\n                <div className=\"user-header\">\r\n                    <div className=\"pdp-container\">\r\n                        <img className=\"object-fit-cover\" src={process.env.PUBLIC_URL+\"/\"+author.pdpPath} alt=\"Pdp\" />\r\n                    </div>\r\n                    <div className=\"side-info\">\r\n                        <p className=\"name\">{author.GetFullName()}</p>\r\n                        <p>\r\n                            <span className=\"group-name\">{this.context.getGroupById(this.props.currentPost.groupId).name}</span>\r\n                            <span className=\"date\">{this.props.currentPost.date}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"post-content\">\r\n                    <h5 className=\"post-title\"><NavLink to={\"/post/\"+this.props.currentPost.id}>{this.props.currentPost.title}</NavLink></h5>\r\n                    <p>\r\n                    {description}\r\n                    </p>\r\n                </div>\r\n                <div className=\"post-footer\">\r\n                    <ul>\r\n                        <li><a onClick={(e) => {\r\n                                e.preventDefault() ;\r\n                                this.performLike() ;\r\n                            }\r\n                        } href=\"#\" className={this.isLiked?\"active\":\"\"}><FontAwesome name=\"thumbs-o-up\" /> <span className=\"value\">{this.props.currentPost.likes}</span></a></li>\r\n                        <li><a onClick={(e) => {\r\n                                e.preventDefault() ; \r\n                                this.performDislike() ;\r\n                            }\r\n                        } href=\"#\" className={this.isDisliked?\"active\":\"\"}><FontAwesome name=\"thumbs-o-down\" /> <span className=\"value\">{this.props.currentPost.dislikes}</span></a></li>\r\n                        <li><a onClick={(e) => this.toggleComments(e)} href={\"#form-\"+this.props.currentPost.id}><FontAwesome name=\"comment-o\" /> <span className=\"value\">{myComments.length}</span></a></li>\r\n                    </ul>\r\n                </div>\r\n                <CommentList setContainer={(val: any) => this.setCommentsContainer(val)} comments={myComments} post={this.props.currentPost} show={!this.state.isCommentsClosed} />\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nSinglePost.contextType = MyContext ;\r\n\r\nexport default SinglePost ;","import {Component} from 'react' ;\r\nimport {Group} from '../../models/Group' ;\r\nimport './SingleGroup.css'\r\n\r\nclass SingleGroup extends Component<{currentGroup: Group, showDescription: boolean}>{\r\n    render(){\r\n        return (\r\n            <a href=\"/\" className=\"group-item\">\r\n                <div className=\"small-img-container\">\r\n                    <img className=\"object-fit-cover\" src={process.env.PUBLIC_URL+\"/\"+this.props.currentGroup.imagePath} alt=\"Groupe\" />\r\n                </div>\r\n                <div>\r\n                    <span className=\"name\">{this.props.currentGroup.name}</span>\r\n                    { this.props.showDescription?<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt</p>:null }\r\n                </div>\r\n            </a>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default SingleGroup ;","import { Component } from 'react' ;\r\nimport { Group } from '../../models/Group';\r\nimport { MyContext } from '../MyContext';\r\nimport SingleGroup from '../SingleGroup/SingleGroup';\r\n\r\nclass SuggestGroup extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"right-side\">\r\n                <h5 className=\"panel-title\">Suggérées pour vous</h5>\r\n                { this.context.groups.map((item:Group) => \r\n                    <SingleGroup key={item.id} currentGroup={item} showDescription={true}/>    \r\n                )}\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nSuggestGroup.contextType = MyContext ;\r\n\r\nexport default SuggestGroup ;","import { Component } from 'react';\r\nimport './Feed.css' ;\r\nimport SinglePost from '../SinglePost/SinglePost';\r\nimport SingleGroup from '../SingleGroup/SingleGroup';\r\nimport { MyContext } from '../MyContext' ;\r\nimport { Post } from '../../models/Post';\r\nimport { Group } from '../../models/Group';\r\nimport { hideLoader, showLoader } from '../AppLoader/AppLoader';\r\nimport SuggestGroup from '../SuggestGroup/SuggestGroup';\r\nvar FontAwesome = require('react-fontawesome');\r\n\r\nclass Feed extends Component{\r\n\r\n    constructor(props:any){\r\n        super(props) ;\r\n        showLoader() ;\r\n    }\r\n    componentDidMount(){\r\n        setTimeout(() => hideLoader(), 1000) ;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"feed\">\r\n                <div className=\"wrapper flex-container\">\r\n                    <div className=\"col-25 flex-item sticky\">\r\n                        <div className=\"panel transparent group-sidebar\">\r\n                            <h5 className=\"panel-title\">Vos groupes</h5>\r\n                            <a href=\"/\" className=\"group-item btn-semi-transparent\">\r\n                                <div className=\"small-img-container\">\r\n                                    <FontAwesome name=\"plus\" />\r\n                                </div>\r\n                                <div>\r\n                                    <span>Créer une groupe</span>\r\n                                </div>\r\n                            </a>\r\n                            { this.context.groups.map((item: Group) => \r\n                                <SingleGroup key={item.id} currentGroup={item} showDescription={false}/>    \r\n                            )}\r\n                            <a href=\"/\" className=\"group-item\">\r\n                                <div className=\"small-img-container\">\r\n                                    <FontAwesome name=\"group\" />\r\n                                </div>\r\n                                <div>\r\n                                    <span>Voir plus de groupes</span>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex-item\">\r\n                        <div>\r\n                            <div className=\"panel\">\r\n                                <div className=\"user-header disabled\">\r\n                                    <div className=\"pdp-container small\">\r\n                                        <img src={process.env.PUBLIC_URL+\"/\"+this.context.loggedUser.pdpPath} alt=\"Pdp\" />\r\n                                    </div>\r\n                                    <span className=\"side-info name\">{ this.context.loggedUser.GetFullName() }</span>\r\n                                </div>\r\n                                <h4 className=\"grey editable\" onClick={() => {\r\n                                    this.context.newPostStatusHandler(true) ;\r\n                                }}>Quelle est votre question?</h4>\r\n                            </div>\r\n                            { \r\n                                this.context.posts.slice(0).reverse().map((item:Post) => \r\n                                    <div className=\"panel\" key={item.id}>\r\n                                        <SinglePost fromView={false}  currentPost={item} maximize={false} />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-25 flex-item\">\r\n                        <div className=\"panel\">\r\n                            <SuggestGroup />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nFeed.contextType = MyContext ;\r\n\r\nexport default Feed ;","import { Component } from 'react' ;\r\nimport Authentification from '../Authentification/Authentification';\r\nimport Feed from '../Feed/Feed';\r\nimport { MyContext } from '../MyContext';\r\nimport './Home.css' ;\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        var base = <Authentification /> ;\r\n        var html = document.getElementsByTagName(\"html\")[0] ;\r\n        html.classList.remove(\"auth\") ;\r\n        if(this.context.isLogged()){\r\n            base = <Feed />\r\n        }\r\n        return (\r\n            <div className=\"Home\">\r\n                {\r\n                    base\r\n                }\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nHome.contextType = MyContext ;\r\n\r\nexport default Home ;","import { Component } from 'react' ;\r\nimport { Post } from '../../models/Post';\r\nimport SinglePost from '../SinglePost/SinglePost';\r\nimport { MyContext } from '../MyContext';\r\nimport { NavLink, RouteComponentProps } from 'react-router-dom';\r\n\r\ninterface ViewPostRouterProps {\r\n    id: any;\r\n}\r\n  \r\ninterface ViewPostProps extends RouteComponentProps<ViewPostRouterProps> {\r\n\r\n}\r\n\r\nclass ViewPost extends Component<ViewPostProps>{\r\n    state = {\r\n        selectedPost: new Post()\r\n    }\r\n\r\n    loadSelectedPost(){\r\n        const id = Number(this.props.match.params.id) ;\r\n        this.setState({\r\n            selectedPost: this.context.getPostById(id)\r\n        }) ;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadSelectedPost() ;\r\n    }\r\n\r\n    componentDidUpdate(nextProps:ViewPostProps){\r\n        if (nextProps.location !== this.props.location) {\r\n            this.loadSelectedPost() ;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.selectedPost.id === 0 || this.state.selectedPost === undefined){\r\n            return(\r\n                <div></div>\r\n            )  ;     \r\n        }else{\r\n            return (\r\n                <div className=\"bg-white\">\r\n                    <div className=\"full-padding wrapper flex-container\">\r\n                        <div className=\"flex-item\">\r\n                            <SinglePost maximize={true} fromView={true} currentPost={this.state.selectedPost as unknown as Post} />\r\n                        </div>\r\n                        <div className=\"col-25 flex-item\">\r\n                            <div className=\"right-side sticky\">\r\n                                <h5 className=\"panel-title\">Questions similaires</h5>\r\n                                { this.context.posts.filter((x:Post) => x.id !== this.state.selectedPost.id).map((item:Post) => {\r\n                                    return (\r\n                                        <div key={item.id}>\r\n                                            <NavLink to={\"/post/\"+item.id} >{item.title}</NavLink>\r\n                                        </div>\r\n                                    ) ;\r\n                                }    \r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) ;\r\n        }\r\n    }\r\n}\r\n\r\nViewPost.contextType = MyContext ;\r\n\r\nexport default ViewPost ;","import { Component } from 'react' ;\r\nimport { Post } from '../../models/Post';\r\nimport { MyContext } from '../MyContext';\r\nimport './Search.css' ;\r\nimport SinglePost from '../SinglePost/SinglePost';\r\nimport SuggestGroup from '../SuggestGroup/SuggestGroup';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\ninterface SearchRouterProps {\r\n    keyword: any;\r\n}\r\n  \r\ninterface SearchProps extends RouteComponentProps<SearchRouterProps> {\r\n\r\n}\r\n\r\nclass Search extends Component<SearchProps>{\r\n    state = {\r\n        keyword: null as unknown as string\r\n    }\r\n\r\n    loadSearchKeyword(){\r\n        this.setState({\r\n            keyword: this.props.match.params.keyword.toString()\r\n        }) ;\r\n    }\r\n\r\n    componentDidUpdate(nextProps:SearchProps) {\r\n        if (nextProps.location !== this.props.location) {\r\n            this.loadSearchKeyword() ;\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadSearchKeyword() ;\r\n    }\r\n\r\n    render(){\r\n        let result = this.context.posts.filter((x:Post) => x.title.toLowerCase().includes(this.state.keyword)) ;\r\n        return (\r\n            <div className=\"bg-white\" id=\"search\">\r\n                <div className=\"wrapper flex-container\">\r\n                    <div className=\"flex-item flex-grow\">\r\n                        <div>\r\n                            <h4 className=\"text-lead\">Résultat de votre recherche</h4>\r\n                            {\r\n                            result.length > 0?\r\n                            result.map((item:Post) => \r\n                                <div className=\"list-result\" key={item.id}>\r\n                                    <SinglePost fromView={false}  currentPost={item} maximize={false} />\r\n                                </div>\r\n                            ):\r\n                            <p>Aucune question ne correspond à votre recherche</p>\r\n                            }\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"flex-item col-25\">\r\n                        <SuggestGroup />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nSearch.contextType = MyContext ;\r\n\r\nexport default Search ;","import { Component } from 'react' ;\r\nimport './Footer.css' ;\r\nvar FontAwesome = require('react-fontawesome') ;\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return (\r\n            <footer>\r\n                <p><FontAwesome name=\"copyright\" /> E-Pandemic Link | Ravalison Manda Jerisoa IMTICIA5</p>\r\n            </footer>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default Footer ;","import React, { Component, Suspense } from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header' ;\nimport { Post } from './models/Post';\nimport { User } from './models/User' ;\nimport { Group } from './models/Group' ;\nimport {MyContext} from './Components/MyContext' ;\nimport NewPost from './Components/NewPost/NewPost';\nimport { _Comment } from './models/_Comment';\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport { Data } from './Data/data';\nimport Error from './Components/Error/Error';\nimport AppLoader, { hideLoader, loaderRef, showLoader } from './Components/AppLoader/AppLoader';\nimport Home from './Components/Home/Home';\nimport ViewPost from './Components/ViewPost/ViewPost';\nimport Search from './Components/Search/Search';\nimport Footer from './Components/Footer/Footer';\nimport { Alert } from '@material-ui/lab' ;\nimport Snackbar from '@material-ui/core/Snackbar';\n\nconst FontAwesome = require('react-fontawesome') ;\n\nconst LoginComponent = React.lazy(() => import('./Components/Login/Login'));\nconst SignUpComponent = React.lazy(() => import('./Components/SignUp/SignUp'));\n\nclass App extends Component{\n\n  state = {\n    posts: Data.posts,\n    comments: Data.comments,\n    users: Data.users,\n    groups: Data.groups,\n    addPost:(toAdd: Post) => {\n      let update = this.state.posts.slice(0) ;\n      update.push(toAdd) ;\n      this.setState({\n        posts: update\n      }) ;\n    },\n    addComment:(toAdd: _Comment) => {\n      let update = this.state.comments.slice(0) ;\n      update.push(toAdd) ;\n      this.setState({\n        comments: update\n      }) ;\n    },\n    addUser: (toAdd: User) => {\n      let update = this.state.users.slice(0) ;\n      update.push(toAdd) ;\n      this.setState({\n        users: update\n      }) ;\n    },\n    getUserById(id: number):User{\n      return this.users.find(\n          (user) => {\n              return user.id === id\n          }\n      ) as User ;\n    },\n    getGroupById(id: number):Group{\n      return this.groups.find(\n        (group) => {\n          return group.id === id\n        }\n      ) as Group ;\n    },\n    getPostById(id: number):Post{\n      return this.posts.find(\n        (post) => {\n          return post.id === id\n        }\n      ) as Post ;\n    },\n    getPostsByUserId(id: number):Post[]{\n        return this.posts.filter(\n            (post) => {\n                return post.authorId === id\n            }\n        ) as Post[] ;\n    },\n    getCommentsByPostId(id: number):_Comment[]{\n      return this.comments.filter(\n        (com) => {\n          return com.postId === id\n        }\n      ) as _Comment[] ;\n    },\n    getLastId(arr: any):number{\n      const length = arr.length ;\n      return arr[length - 1].id +1 ;\n    },\n    postModifHandler : (id:number, updatedValue: Post) => {\n      const newPostList = this.state.posts ;\n      const index = newPostList.findIndex(post => post.id === id) ;\n      newPostList[index] = updatedValue ;\n      this.setState({\n        posts: newPostList\n      }) ;\n    },\n    newPostStatusHandler: (newPostState: boolean) => {\n      this.setState({\n        showNewPostModal: newPostState\n      })\n    },\n    showNewPostModal: false,\n    loadAuthComp: null,\n    setLoadAuthComp: (selected:string | null) => {\n      this.setState({\n        loadAuthComp : selected\n      }) ;\n    },\n    loggedUser: null,\n    isLogged: ():boolean => {\n      return this.state.loggedUser !== null ;\n    },\n    login: (user: User, withMessage: boolean) => {\n      this.setState({\n        loggedUser: user\n      }, () => {\n        if(withMessage)\n          this.state.setSuccessMessage(\"Bienvenu(e) \"+user.GetFullName())\n      }) ;\n    },\n    logout: () => {\n      this.setState({\n        loggedUser: null\n      })\n    },\n    errorMessage: null,\n    setErrorMessage: (val:string | null) => {\n      this.setState({\n        errorMessage: val\n      })\n    },\n    successMessage: null,\n    setSuccessMessage: (val:string | null) => {\n      this.setState({\n        successMessage: val\n      })\n    }\n  }\n\n  constructor(props:any){\n    super(props) ;\n    showLoader() ;\n  }\n  \n  componentDidMount(){\n    hideLoader() ;\n  }\n\n  render(){\n    return (\n      \n      <div>\n        <div className=\"App\">\n          <MyContext.Provider value={this.state}>\n            <HashRouter>\n              <div id=\"content\">\n                <Header />\n                <Switch>\n                    <Route path=\"/\" exact><Home/></Route>\n                    <Route path=\"/login\"><Home/></Route>\n                    <Route path=\"/post/:id\" component={ViewPost} />\n                    <Route path=\"/search/:keyword\" component={Search} />\n                    <Route component={Error}></Route>\n                </Switch>\n              </div>\n            </HashRouter>\n            {\n              this.state.showNewPostModal?<NewPost />:null\n            }\n            {this.state.loadAuthComp !== null ? (\n              <div className=\"modal\">\n                <div className=\"modal-content animation-zoom-in container\">\n                  <div className=\"modal-header\">\n                      <h5 className=\"text-center modal-title\">Authentification</h5>\n                      <FontAwesome className=\"close red-hover\" name=\"times\" onClick={() => {\n                          this.state.setLoadAuthComp(null) ;\n                      }} />\n                  </div>\n                  <div className=\"modal-body small-margin-y\">\n                    <Suspense fallback={<div>Chargement...</div>}>\n                      {this.state.loadAuthComp === \"login\"?\n                      <LoginComponent toggle={() => this.state.setLoadAuthComp(\"signUp\")} />\n                      : <SignUpComponent toggle={() => this.state.setLoadAuthComp(\"login\")} />\n                      }\n                    </Suspense>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n          </MyContext.Provider>\n          <Footer />\n        </div>\n        <AppLoader ref={loaderRef} />\n\n        {\n          this.state.successMessage != null?\n          <Snackbar open={true} autoHideDuration={6000} anchorOrigin={{ vertical: 'bottom', horizontal:'left' }} onClose={() => this.state.setSuccessMessage(null)}>\n            <Alert variant=\"filled\" severity=\"success\">{this.state.successMessage}</Alert>\n          </Snackbar>\n          : null\n        }\n        {\n          this.state.errorMessage != null?\n          <Snackbar  open={true} autoHideDuration={6000} anchorOrigin={{ vertical: 'bottom', horizontal:'left' }} onClose={() => this.state.setErrorMessage(null)}>\n            <Alert variant=\"filled\" severity=\"error\">{this.state.errorMessage}</Alert>\n          </Snackbar>\n          : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/default.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')) ;\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}